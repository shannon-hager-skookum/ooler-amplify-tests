
type User @model {
  deviceList: [DeviceUser] @connection(name: "UserDevices")
  ratingList(limit: Int, nextToken: String): [Rating] @connection(name: "UserRatings")
  #ScheduleList(limit: Int, nextToken: String): ScheduleConnection
  email: AWSEmail
  name: String!
  userId: ID!
}

type AppUsage @model {
  appUsageId: String!
  parameters: String!
  timestamp: String!
  userId: String!
}

type Rating @model {
  ratingCount: Int!
  ratingId: String!
  ratingTime: String!
  user: User @connection(name: "UserRatings")
}


type Device @model {
  #DeviceDataList(limit: Int, nextToken: String): DeviceDataConnection
  #DeviceDetailsList(limit: Int, nextToken: String): DeviceDetailsConnection
  deviceId: String!
  deviceOrigionalName: String!
  macId: String!
  userList: [DeviceUser] @connection(name: "DeviceUsers")
}

# Create a join model and disable queries as you don't need them
# this is required due to amplify cli lack of many-to-many support
# tracked here https://github.com/aws-amplify/amplify-cli/issues/91
# documented here https://aws-amplify.github.io/docs/cli/graphql?sdk=iok#connection (under many-to-many heading)
type DeviceUser @model(queries: null) {
  id: ID!
  device: Device! @connection(name: "DeviceUsers")
  user: User! @connection(name: "UserDevices")
}
